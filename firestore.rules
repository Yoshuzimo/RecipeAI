
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Default: Deny all access unless explicitly allowed ---
    match /{document=**} {
      allow read, write: if false;
    }

    // --- Users Collection ---
    // Rules for individual user documents and their subcollections
    match /users/{userId} {

      // A user can create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;

      // A user can read, update, or delete their own user document.
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;

      // --- User Subcollections (private inventory, settings, etc.) ---
      // A user has full control over all documents in their own subcollections.
      match /{subCollection}/{docId} {
        allow read, write, create, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // --- Households Collection ---
    // Rules for shared household documents and their subcollections
    match /households/{householdId} {

      // Any authenticated user can read the main household document.
      // This is necessary for fetching household info by invite code before joining.
      allow read: if request.auth != null;

      // Allow creating a household. The user creating it must be the owner.
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;

      // Allow updates (like adding/removing members) only if the user is an active member.
      // The household owner is implicitly an active member.
      allow update: if request.auth != null && get(/databases/$(database)/documents/households/$(householdId)).data.activeMembers.exists(member, member.userId == request.auth.uid);

      // Only the owner can delete a household.
      allow delete: if request.auth != null && get(/databases/$(database)/documents/households/$(householdId)).data.ownerId == request.auth.uid;


      // --- Household Subcollections (shared inventory, shopping list, etc.) ---
      // Any active member of the household can read, write, create, and delete documents.
      match /{subCollection}/{docId} {
        allow read, write, create, delete: if request.auth != null && 
          exists(/databases/$(database)/documents/households/$(householdId)) &&
          get(/databases/$(database)/documents/households/$(householdId)).data.activeMembers.exists(member, member.userId == request.auth.uid);
      }
    }
  }
}
