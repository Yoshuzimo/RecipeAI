
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for user-specific data
    match /users/{userId}/{documents=**} {
      // Allow a user to read and write to their own documents and subcollections
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow a user to be created only if they don't already exist.
    match /users/{userId} {
       allow create: if request.auth != null && !exists(/databases/$(database)/documents/users/$(userId));
    }

    // Rules for shared household data
    match /households/{householdId} {
        // Any authenticated user can read household data to check for invites, etc.
        allow read: if request.auth != null;

        // Only allow a user to write to a household if they are listed as an active member.
        // This covers creating/updating inventory, shopping lists, and locations.
        allow write: if request.auth != null && exists(/databases/$(database)/documents/households/$(householdId))
                      && resource.data.activeMembers.hasAny(['userId'], [request.auth.uid]);
    }
    
    // Rules for household subcollections (inventory, locations, etc.)
    match /households/{householdId}/{documents=**} {
       // Only allow a user to read/write to subcollections if they are an active member.
       allow read, write: if request.auth != null 
                          && get(/databases/$(database)/documents/households/$(householdId)).data.activeMembers.hasAny(['userId'], [request.auth.uid]);
    }
  }
}
